@inject PeriodicExecutor PeriodicExecutor
@inject StateService stateService
@inherits LayoutComponentBase

<CascadingValue Value="state">
<header class="p-3 bg-dark text-white">
    <div class="container">
      <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
        
        
        
         
        <NavMenu/>

       
      </div>
    </div>
  </header>
<main>



  <div class="album py-5 bg-light">
    <div class="container">

       @Body
    </div>
  </div>

</main>
</CascadingValue>
<footer class="text-muted py-5">
  <div class="container">
    <p>Powered by TOPAAS</p>
  </div>
</footer>

@code {
    State state = new();

    protected override async Task OnInitializedAsync()
    {
        PeriodicExecutor.StartExecuting();
        PeriodicExecutor.JobExecuted += HandleJobExecuted;

        //stateOptions.OnChange(Test);
        state = await stateService.GetLatest();
        base.StateHasChanged();
    }
    public void Dispose()
    {
        PeriodicExecutor.JobExecuted -= HandleJobExecuted;
    }

    void HandleJobExecuted(object sender, JobExecutedEventArgs e)
    {
        state = e.LatestState;
        base.StateHasChanged();
    }
}